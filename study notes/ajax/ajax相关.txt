Ajax :在浏览器中，我们可以在不刷新页面的情况下，通过ajax的方式去获取一些新的内容。
    发送Ajax请求的五个步骤
    1.创建异步对象，XMLHttpRequest对象
    2.使用open方法设置请求参数，open(method,url,async). 请求方法 请求url 是否异步
    3.发送请求
    4.注册事件，注册onreadstatechange 事件 状态改变时就会调用，如果要在数据完整请求回来的时候才调用，我们需要手动写一些判断的逻辑。
    5.获取返回数据

get请求：
    <input type="button" value="发送get_ajax请求" id='btnAjax'>
    <script>
    //绑定事件
    document.querySelector('#btnAjax').onclick = function(){
        //1.创建异步对象
        var ajaxObj = new XMLHttpRequest();
        //2.设置请求参数 包括请求方法 请求的url
        ajaxObj.open('get','02-ajax.php');
        //3.发送请求
        ajaxObj.send();
        //4.注册事件，onreadstatechange事件，状态改变时就会调用
        ajaxObj.onreadstatechange=function(){
            if(ajaxObj.readState == 4 && ajaxObj.status == 200){
                //5.在注册的事件中 获取 返回的 内容 并修改页面的显示
                console.log("数据返回成功");
                 // 数据是保存在 异步对象的 属性中
                 console.log(ajaxObj.responseText);
                 // 修改页面的显示
                 document.querySelector('h1').innerHTML = ajaxObj.responseText;
            }
        }
    }
    </script>

post请求：


<script type="text/javascript">
    // 异步对象
    var xhr = new XMLHttpRequest();
    // 设置属性
    xhr.open('post', '02.post.php');
    // 如果想要使用post提交数据,必须添加此行
    xhr.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
    // 将数据通过send方法传递
    xhr.send('name=fox&age=18');
    // 发送并接受返回值
    xhr.onreadystatechange = function () {
        // 这步为判断服务器是否正确响应
        if (xhr.readyState == 4 && xhr.status == 200) {
            alert(xhr.responseText);
        }
    };
</script>

发送请求：
    发送请求的方法：open(method, url, async);
    method：请求类型 get post
    url：文件在服务器上的位置
    async：true 异步  false  同步
    另外还有个方法：（仅用于 POST 请求）	send(string);
post请求时注意：
    如果想让 像form 表单提交数据那样使用POST请求，就需要使用XMLHttpRequest 对象的 setRequestHeader()方法 来添加 HTTP 头。然后在 send() 方法中添加想要发送的数据：
    xmlhttp.open("POST","ajax_test.php", true);
	xmlhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
	xmlhttp.send("name=smyhvae&age=27");

onreadystatechange 事件
    注册 onreadystatechange 事件后，每当 readyState 属性改变时，就会调用 onreadystatechange 函数。
    readyState：（存有 XMLHttpRequest 的状态。从 0 到 4 发生变化）
    0：请求未初始化
    1：服务器连接已建立
    2：请求已接受
    3；请求处理中
    4：请求已完成，且响应已就绪
status：
    200  ok 
    404  未找到页面
在 onreadystatechange 事件中，当 readyState 等于 4，且状态码为200时，表示响应已就绪。



Ajax传输XML
    XML（Extensible Markup Language）：可扩展标记语言
    










