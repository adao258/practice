vue3 
  响应性基础api
    reactive: 
      将解析所有的refs 同时维持ref的响应性
      当ref分配给reactive property 时, ref将自动解包
    readonly:
      接受一个对象或ref并返回原始对象的只读代理, 只读代理是深层的,任何被访问的嵌套property也是只读的
      与 reactive 一样，如果任何 property 使用了 ref，当它通过代理访问时，则被自动解包
    isProsy: 
      检查对象是否由reactive 或 readonly 创建的proxy
    isReactive:
      检查对象是否由reactive 创建的响应式代理
      如果该代理是readonly创建的,但包裹了由reactive创建的里一个代理 他也会返回true
    isReadonly:
      检查对象是否是由 readonly 创建的只读代理。
    toRaw:
      返回reactive 或 readonly 代理的原始对象
      这是一个“逃生舱”，可用于临时读取数据而无需承担代理访问/跟踪的开销，也可用于写入数据而避免触发更改。
      不建议保留对原始对象的持久引用。
    markRaw:
      标记一个对象，使其永远不会转换为 proxy。返回对象本身。
    shallowReactive:
      创建一个响应式代理，它跟踪其自身 property 的响应性，但不执行嵌套对象的深层响应式转换 (暴露原始值)。
    shallowReadonly:
      创建一个 proxy，使其自身的 property 为只读，但不执行嵌套对象的深度只读转换 (暴露原始值)。
  refs
    ref: 提供响应式引用
      使任何响应式变量在任何地方起作用,ref接受参数并将其包裹在一个带有value property的对象返回
      接受一个内部值并返回一个响应式且可变的 ref 对象。ref 对象具有指向内部值的单个 property
    unref:
      如果参数是一个 ref，则返回内部值，否则返回参数本身
      这是 val = isRef(val) ? val.value : val 的语法糖函数。
    toRef:
      可以用来为源响应式对象上的某个 property 新创建一个 ref
      ref 可以被传递，它会保持对其源 property 的响应式连接。
    toRefs:
      将响应对象


















